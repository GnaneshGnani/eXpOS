alias userSP R0;
alias fileDescriptor R1;

userSP = SP;
//breakpoint;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = ([PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512) - 1;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 5;

if([([PTBR + 2 * ((userSP - 4) / 512)] * 512) + ((userSP - 4) % 512)] != -2)
then
	[[PTBR + 2 * ((userSP - 1) / 512)] * 512 + (userSP - 1) % 512] = -1;
else
	multipush (R0,R1,R2,R3);
	R1 = 3;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	R3 = [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + (userSP - 3) % 512];
	
	call MOD_4;
	
	multipop(R0,R1,R2,R3);
	//print([[PTBR + 2 * ((userSP - 3) / 512)] * 512 + (userSP - 3) % 512]);
	[[PTBR + 2 * ((userSP - 1) / 512)] * 512 + (userSP - 1) % 512] = 0;
endif;

SP = userSP;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;

//breakpoint;

ireturn;