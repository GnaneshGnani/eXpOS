alias FuncNum R1;

if(R1 == 1)
then
	R2 = 1;
	
	while(R2 < 16)
	do
		if([PROCESS_TABLE + (R2 * 16) + 4] == TERMINATED)
		then
			//PTBR = PAGE_TABLE_BASE + (R2 * 20);
			PTLR = 10;

			[PROCESS_TABLE + (R2 * 16) + 1] = R2;
			[PROCESS_TABLE + (R2 * 16) + 4] = ALLOCATED;
			
			[PROCESS_TABLE + (R2 * 16) + 14] = PAGE_TABLE_BASE + (R2 * 20);
			[PROCESS_TABLE + (R2 * 16) + 15] = PTLR;
			R0 = R2;
			return;
		endif;
		
		R2 = R2 + 1;
	endwhile;

	R0 = -1;
	return;
endif;

if(FuncNum == 2)
then
	alias PID R2;
	alias UserPage R3;

	UserPage = [PROCESS_TABLE + (PID * 16) + 11];
	multipush (R0,R1,R2,R3);
	R1 = 2;
	R2 = R3;
	call MOD_2;
	multipop (R0,R1,R2,R3);

	return;

endif;

if(FuncNum == 3)
then
	alias PID R2;

	multipush (R0,R1,R2,R3);
	R1 = 4;
	R2 = PID;
	call MOD_1;
	multipop (R0,R1,R2,R3);

	multipush (R0,R1,R2,R3);
	R1 = 2;
	R2 = PID;
	call MOD_1;
	multipop (R0,R1,R2,R3);

	[PROCESS_TABLE + (PID * 16) + 4] = TERMINATED;
	return;
endif;

if(FuncNum == 4)
then
	alias PID R2;

	PTBR = PAGE_TABLE_BASE + (PID * 20);

	[PTBR + 0] = -1;
	[PTBR + 1] = "0000";
	[PTBR + 2] = -1;
	[PTBR + 3] = "0000";

	multipush (R3);

	R3 = 2;
	while(R3 < 10)
	do
		if([PTBR + (2 * R3)] != -1)
		then
			multipush (R0,R1,R2,R3);
			R1 = 2;
			R2 = [PTBR + (R3 * 2)];
			call MOD_2;
			multipop (R0,R1,R2,R3);

			[PTBR + (2 * R3)] = -1;
			[PTBR + (2 * R3) + 1] = "0000";
		endif;

		R3 = R3 + 1;
	endwhile;

	R3 = 2;
	while(R3 < 4)
	do
		if([DISK_MAP_TABLE + (R2 * 10) + R3] != -1)
		then
			multipush (R0,R1,R2,R3,R4);
			R1 = 4;
			R4 = R2;
			R2 = [DISK_MAP_TABLE + (R2 * 10) + R3];
			R3 = R4;
			call MOD_2;
			multipop (R0,R1,R2,R3,R4);

			[DISK_MAP_TABLE + (R2 * 10) + R3] = -1;
		endif;
		R3 = R3 + 1;
	endwhile;

	R3 = 4;
	while(R3 < 8)
	do
		[DISK_MAP_TABLE + (R2 * 10) + R3] = -1;
		R3 = R3 + 1;
	endwhile;

	R3 = 8;
	while(R3 < 10)
	do
		if([DISK_MAP_TABLE + (R2 * 10) + R3] != -1)
		then
			multipush (R0,R1,R2,R3,R4);
			R1 = 4;
			R4 = R2;
			R2 = [DISK_MAP_TABLE + (R2 * 10) + R3];
			R3 = R4;
			call MOD_2;
			multipop (R0,R1,R2,R3,R4);

			[DISK_MAP_TABLE + (R2 * 10) + R3] = -1;
		endif;
		R3 = R3 + 1;
	endwhile;

	multipop (R3);
	return;
endif;

return;